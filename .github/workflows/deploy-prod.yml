name: Build, Push Docker Image & Deploy to EC2

on:
  push:
    branches:
      - _main  # change branch as needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION_PROD }}

    # Step 3: Login to Amazon ECR
    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ vars.AWS_REGION_PROD }} \
        | docker login --username AWS --password-stdin 651706760029.dkr.ecr.${{ vars.AWS_REGION_PROD }}.amazonaws.com

    - name: Build Docker image
      run: |
        IMAGE_TAG=651706760029.dkr.ecr.${{ vars.AWS_REGION_PROD }}.amazonaws.com/iprowhats-rewrite-frontend-prod:latest
        docker build -t $IMAGE_TAG -f docker/prod/Dockerfile .
        echo "::set-output name=image::$IMAGE_TAG"

    - name: Push Docker image to ECR
      run: |
        IMAGE_TAG=651706760029.dkr.ecr.${{ vars.AWS_REGION_PROD }}.amazonaws.com/iprowhats-rewrite-frontend-prod:latest
        docker push $IMAGE_TAG

    - name: Install SSH key
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.EC2_SSH_KEY_PROD }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ vars.EC2_HOST_PROD }} > ~/.ssh/known_hosts

    - name: Deploy on EC2 via SSH
      run: |
        IMAGE_TAG=651706760029.dkr.ecr.${{ vars.AWS_REGION_PROD }}.amazonaws.com/iprowhats-rewrite-frontend-prod:latest
        ssh ${{ vars.EC2_USER }}@${{ vars.EC2_HOST_PROD }} << EOF
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          export AWS_DEFAULT_REGION=${{ vars.AWS_REGION_PROD }}

          cd /home/ubuntu/ihsanai-prod
          ${{ vars.ECR_LOGIN }}

          echo "Pulling latest image"
          docker pull $IMAGE_TAG

          echo "Stopping and removing existing container (if any)"
          docker stop iprowhats-rewrite-frontend || true
          docker rm iprowhats-rewrite-frontend || true

          echo "Starting new container"
          docker run -d --name iprowhats-rewrite-frontend -p 3001:3001 $IMAGE_TAG

          echo "Deployment finished!"
        EOF
